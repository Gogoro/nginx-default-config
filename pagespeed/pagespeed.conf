pagespeed on;

# Needs to exist and be writable by nginx.  Use tmpfs for best performance.
pagespeed FileCachePath /var/ngx_pagespeed_cache;

pagespeed RewriteLevel PassThrough;
pagespeed EnableFilters add_head;
pagespeed EnableFilters convert_meta_tags;
pagespeed EnableFilters extend_cache;

pagespeed EnableFilters rewrite_css;
pagespeed EnableFilters combine_css;
pagespeed EnableFilters inline_css;
pagespeed EnableFilters fallback_rewrite_css_urls;
pagespeed EnableFilters flatten_css_imports;
pagespeed EnableFilters inline_import_to_link;
pagespeed EnableFilters rewrite_style_attributes_with_url;

pagespeed EnableFilters prioritize_critical_css;

pagespeed FetchHttps enable;

pagespeed EnableFilters inline_google_font_css;
pagespeed GoogleFontCssInlineMaxBytes -1;

pagespeed EnableFilters inline_javascript;
pagespeed EnableFilters combine_javascript;
pagespeed EnableFilters rewrite_javascript;

pagespeed EnableFilters rewrite_images;
pagespeed EnableFilters inline_preview_images;
pagespeed EnableFilters resize_mobile_images;
pagespeed EnableFilters lazyload_images;
#pagespeed EnableFilters convert_gif_to_png;
pagespeed EnableFilters recompress_png;
#pagespeed EnableFilters convert_png_to_jpeg;
pagespeed EnableFilters convert_jpeg_to_progressive;
pagespeed EnableFilters recompress_jpeg;
pagespeed EnableFilters convert_jpeg_to_webp;
pagespeed EnableFilters convert_to_webp_lossless;
pagespeed EnableFilters convert_to_webp_animated;
pagespeed EnableFilters recompress_webp;
pagespeed EnableFilters inline_images;
pagespeed EnableFilters resize_images;


# Ensure requests for pagespeed optimized resources go to the pagespeed handler
# and no extraneous headers get set.
location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  add_header "" "";
}
location ~ "^/pagespeed_static/" { }
location ~ "^/ngx_pagespeed_beacon$" { }

#pagespeed StatisticsPath /ngx_pagespeed_statistics;
#pagespeed MessagesPath /ngx_pagespeed_message;
#pagespeed ConsolePath /pagespeed_console;
#pagespeed AdminPath /pagespeed_admin;